C51 COMPILER V6.14  SLIP                                                                   11/26/2005 20:58:56 PAGE 1   


C51 COMPILER V6.14, COMPILATION OF MODULE SLIP
OBJECT MODULE PLACED IN .\SLIP.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\SLIP.C LARGE REGFILE(.\can.ORC) DEBUG OBJECTEXTEND LISTINCLUDE SYMBOLS

stmt level    source

   1          #include "slip.h"
   1      =1  int SLIP_Encode_Frame(unsigned char *in, int len, unsigned char *out);
   2      =1  int SLIP_Decode_Frame(unsigned char c, unsigned char *outbuf);
   2          #include "crc.h"
   1      =1  unsigned short calc_crc(unsigned char *buf, int len);
   2      =1  int check_crc(unsigned char *buf, int len);
   3          
   4          #define FEND		0xC0
   5          #define FESC		0xDB
   6          #define TFEND		0xDC
   7          #define TFESC		0xDD
   8          
   9          #define START_FLAG		0x0
  10          #define DECODE_FLAG		0x1
  11          
  12          #define MAX_SLIP_LENGTH		256
  13          
  14          typedef struct
  15          {
  16          	int fescflag;	/* received FESC flag */
  17          	int state;
  18          	int rxlen;
  19          	unsigned char *rxPtr;
  20          } SLIP_STATUS;
  21          
  22          SLIP_STATUS slip;
  23          
  24          
  25          int SLIP_Encode_Frame(unsigned char *in, int len, unsigned char *out)
  26          {
  27   1      	int size = 0;
  28   1      	int i;
  29   1      	unsigned short crc;
  30   1      	unsigned char trans_crc; 
  31   1      	
  32   1      	
  33   1      	crc = calc_crc(in, len);
  34   1      
  35   1      	*out++ = FEND;
  36   1      	size = 1;
  37   1      
  38   1      	for (i=0;i<len;i++)
  39   1      	{
  40   2      		switch (*in)
  41   2      		{
  42   3      			case FEND:
  43   3      				*out++ = FESC;
  44   3      				*out++ = TFEND;
  45   3      				size++;
  46   3      				break;
  47   3      			case FESC :
  48   3      				*out++ = FESC;
  49   3      				*out++ = TFESC;
  50   3      				size++;
  51   3      				break;
C51 COMPILER V6.14  SLIP                                                                   11/26/2005 20:58:56 PAGE 2   

  52   3      			default :
  53   3      				*out++ = *in;
  54   3      				break;
  55   3      		}
  56   2      		size++;
  57   2      		in++;
  58   2      	}
  59   1      	
  60   1      	trans_crc = (unsigned char)(crc >> 8);
  61   1      	switch (trans_crc)
  62   1      	{
  63   2      		case FEND:
  64   2      			*out++ = FESC;
  65   2      			*out++ = TFEND;
  66   2      			size++;
  67   2      			break;
  68   2      		case FESC :
  69   2      			*out++ = FESC;
  70   2      			*out++ = TFESC;
  71   2      			size++;
  72   2      			break;
  73   2      		default :
  74   2      			*out++ = trans_crc;
  75   2      			break;
  76   2      	}
  77   1      
  78   1       	trans_crc = (unsigned char)(crc);
  79   1      	switch (trans_crc)
  80   1      	{
  81   2      		case FEND:
  82   2      			*out++ = FESC;
  83   2      			*out++ = TFEND;
  84   2      			size++;
  85   2      			break;
  86   2      		case FESC :
  87   2      			*out++ = FESC;
  88   2      			*out++ = TFESC;
  89   2      			size++;
  90   2      			break;
  91   2      		default :
  92   2      			*out++ = trans_crc;
  93   2      			break;
  94   2      	}
  95   1      
  96   1          *out++ = FEND;
  97   1      	return size+3;
  98   1      }
  99          
 100          int SLIP_Decode_Frame(unsigned char c, unsigned char *outbuf)
 101          {
 102   1      	int rtn_val;
 103   1      	
 104   1      	if (slip.fescflag)
 105   1      	{
 106   2      		slip.fescflag = 0;
 107   2      		
 108   2      		if (c==TFEND) c = FEND;
 109   2      		else if (c==TFESC) c = FESC;
 110   2      		else slip.state = START_FLAG;
 111   2      	}
 112   1      	else if (c==FESC)
 113   1      	{
C51 COMPILER V6.14  SLIP                                                                   11/26/2005 20:58:56 PAGE 3   

 114   2      		slip.fescflag = 1;
 115   2      		return(0);
 116   2      	}
 117   1      	else if (c==FEND)
 118   1      	{
 119   2      		if (slip.state==START_FLAG)
 120   2      		{
 121   3      			slip.rxPtr = outbuf;
 122   3      			slip.rxlen = 0;
 123   3      			slip.state = DECODE_FLAG;
 124   3      			return(0);
 125   3      		}
 126   2      		else
 127   2      		{
 128   3      			rtn_val = slip.rxlen;
 129   3      			slip.rxPtr = outbuf;
 130   3      			slip.rxlen = 0;
 131   3      			return(rtn_val);
 132   3      		}
 133   2      	}
 134   1      	
 135   1      	if (slip.state==DECODE_FLAG)
 136   1      	{
 137   2      		if (slip.rxlen < MAX_SLIP_LENGTH)
 138   2      		{
 139   3      			*slip.rxPtr++ = c;
 140   3      			slip.rxlen++;
 141   3      		}
 142   2      		else
 143   2      		{
 144   3      			slip.state = START_FLAG;
 145   3      			rtn_val = slip.rxlen;
 146   3      			slip.rxPtr = outbuf;
 147   3      			slip.rxlen = 0;
 148   3      			return(rtn_val);
 149   3      		}
 150   2      	}
 151   1      
 152   1      	return(0);
 153   1      }
 154          
C51 COMPILER V6.14  SLIP                                                                   11/26/2005 20:58:56 PAGE 4   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SLIP_STATUS. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  9
  fescflag . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  state. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
  rxlen. . . . . . . . . . . . . . . .  MEMBER   -----  INT      0004H  2
  rxPtr. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0006H  3
_calc_crc. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_SLIP_Decode_Frame . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  outbuf . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  rtn_val. . . . . . . . . . . . . . .  AUTO     XDATA  INT      0003H  2
_SLIP_Encode_Frame . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  in . . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  len. . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0003H  2
  out. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0005H  3
  size . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0008H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      000AH  2
  crc. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    000CH  2
  trans_crc. . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
slip . . . . . . . . . . . . . . . . .  PUBLIC   XDATA  STRUCT   0000H  9


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    921    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

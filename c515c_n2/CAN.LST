C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 1   


C51 COMPILER V6.14, COMPILATION OF MODULE CAN
OBJECT MODULE PLACED IN .\CAN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\CAN.C LARGE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS

stmt level    source

   1          #include "regc515c.h"
   1      =1  
   2      =1  /* (c) Copyright SIEMENS 1996 , All rights reserved. */
   3      =1  /*  Register Declarations for the C515C Processor    */
   4      =1  
   5      =1  /**********************/
   6      =1  /*  BYTE Register     */
   7      =1  sfr   P0     = 0x80;
   8      =1  sfr   SP     = 0x81;
   9      =1  sfr   DPL    = 0x82;
  10      =1  sfr   DPH    = 0x83;
  11      =1  sfr   WDTREL = 0x86;
  12      =1  sfr   PCON   = 0x87;
  13      =1  sfr   TCON   = 0x88;
  14      =1  sfr   TMOD   = 0x89;
  15      =1  sfr   TL0    = 0x8A;
  16      =1  sfr   TL1    = 0x8B;
  17      =1  sfr   TH0    = 0x8C;
  18      =1  sfr   TH1    = 0x8D;
  19      =1  
  20      =1  sfr   P1     = 0x90;
  21      =1  sfr   XPAGE  = 0x91;
  22      =1  sfr   DPSEL  = 0x92;
  23      =1  sfr   SSCCON = 0x93;
  24      =1  sfr   STB    = 0x94;
  25      =1  sfr   SRB    = 0x95;
  26      =1  sfr   SSCMOD = 0x96;
  27      =1  sfr   SCON   = 0x98;
  28      =1  sfr   SBUF   = 0x99;
  29      =1  sfr   IEN2   = 0x9A;
  30      =1  
  31      =1  sfr   P2     = 0xA0;
  32      =1  sfr   IEN0   = 0xA8;
  33      =1  sfr   IP0    = 0xA9;
  34      =1  sfr   SRELL  = 0xAA;
  35      =1  sfr   SCF    = 0xAB;
  36      =1  sfr   SCIEN  = 0xAC;
  37      =1  
  38      =1  sfr   P3     = 0xB0;
  39      =1  sfr   SYSCON = 0xB1;
  40      =1  sfr   IEN1   = 0xB8;
  41      =1  sfr   IP1    = 0xB9;
  42      =1  sfr   SRELH  = 0xBA;
  43      =1  
  44      =1  sfr   IRCON  = 0xC0;
  45      =1  sfr   CCEN   = 0xC1;
  46      =1  sfr   CCL1   = 0xC2;
  47      =1  sfr   CCH1   = 0xC3;
  48      =1  sfr   CCL2   = 0xC4;
  49      =1  sfr   CCH2   = 0xC5;
  50      =1  sfr   CCL3   = 0xC6;
  51      =1  sfr   CCH3   = 0xC7;
  52      =1  sfr   T2CON  = 0xC8;
  53      =1  sfr   CRCL   = 0xCA;
  54      =1  sfr   CRCH   = 0xCB;
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 2   

  55      =1  sfr   TL2    = 0xCC;
  56      =1  sfr   TH2    = 0xCD;
  57      =1                 
  58      =1  sfr   PSW    = 0xD0;
  59      =1  sfr   ADCON0 = 0xD8;
  60      =1  sfr   ADDATH = 0xD9;
  61      =1  sfr   ADDATL = 0xDA;
  62      =1  sfr   P6     = 0xDB;
  63      =1  sfr   ADCON1 = 0xDC;
  64      =1  sfr   P7     = 0xDD;
  65      =1  sfr   CCPL   = 0xDE;
  66      =1  sfr   CCPH   = 0xDF;
  67      =1  
  68      =1  sfr   ACC    = 0xE0;
  69      =1  sfr   P4     = 0xE8;
  70      =1  
  71      =1  sfr   B      = 0xF0;
  72      =1  sfr   P5     = 0xF8;
  73      =1  sfr   DIR5   = 0xF8;
  74      =1  
  75      =1  /*********************/
  76      =1  /* BIT Register      */
  77      =1  
  78      =1  /* TCON */
  79      =1  sbit  TF1    = 0x8F;
  80      =1  sbit  TR1    = 0x8E;
  81      =1  sbit  TF0    = 0x8D;
  82      =1  sbit  TR0    = 0x8C;
  83      =1  sbit  IE1    = 0x8B;
  84      =1  sbit  IT1    = 0x8A;
  85      =1  sbit  IE0    = 0x89;
  86      =1  sbit  IT0    = 0x88;
  87      =1  /* SCON */
  88      =1  sbit  SM0    = 0x9F;
  89      =1  sbit  SM1    = 0x9E;
  90      =1  sbit  SM2    = 0x9D;
  91      =1  sbit  REN    = 0x9C;
  92      =1  sbit  TB8    = 0x9B;
  93      =1  sbit  RB8    = 0x9A;
  94      =1  sbit  TI     = 0x99;
  95      =1  sbit  RI     = 0x98;
  96      =1  /* IEN0 */
  97      =1  sbit  EAL    = 0xAF;
  98      =1  sbit  WDT    = 0xAE;
  99      =1  sbit  ET2    = 0xAD;
 100      =1  sbit  ES     = 0xAC;
 101      =1  sbit  ET1    = 0xAB;
 102      =1  sbit  EX1    = 0xAA;
 103      =1  sbit  ET0    = 0xA9;
 104      =1  sbit  EX0    = 0xA8;
 105      =1  /* IEN1 */
 106      =1  sbit  EXEN2  = 0xBF;
 107      =1  sbit  SWDT   = 0xBE;
 108      =1  sbit  EX6M   = 0xBD;
 109      =1  sbit  EX5    = 0xBC;
 110      =1  sbit  EX4    = 0xBB;
 111      =1  sbit  EX3    = 0xBA;
 112      =1  sbit  EX2    = 0xB9;
 113      =1  sbit  EADC   = 0xB8;
 114      =1  /* IEN2 */
 115      =1  sbit  ECAN   = 0x9B;
 116      =1  sbit  ESSC   = 0x9C;
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 3   

 117      =1  sbit  EX7    = 0x9E;
 118      =1  sbit  EX8    = 0x9F;
 119      =1  /* P3 */
 120      =1  sbit  RD     = 0xB7;
 121      =1  sbit  WR     = 0xB6;
 122      =1  sbit  T1     = 0xB5;
 123      =1  sbit  T0     = 0xB4;
 124      =1  sbit  INT1   = 0xB3;
 125      =1  sbit  INT0   = 0xB2;
 126      =1  sbit  TXD    = 0xB1;
 127      =1  sbit  RXD    = 0xB0;
 128      =1  /* T2CON */
 129      =1  sbit  T2PS   = 0xCF;
 130      =1  sbit  I3FR   = 0xCE;
 131      =1  sbit  I2FR   = 0xCD;
 132      =1  sbit  T2R1   = 0xCC;
 133      =1  sbit  T2R0   = 0xCB;
 134      =1  sbit  T2CM   = 0xCA;
 135      =1  sbit  T2L1   = 0xC9;
 136      =1  sbit  T2I0   = 0xC8;
 137      =1  /* IRCON */
 138      =1  sbit  EXF2   = 0xC7;
 139      =1  sbit  TF2    = 0xC6;
 140      =1  sbit  IEX6   = 0xC5;
 141      =1  sbit  IEX5   = 0xC4;
 142      =1  sbit  IEX4   = 0xC3;
 143      =1  sbit  IEX3   = 0xC2;
 144      =1  sbit  IEX2   = 0xC1;
 145      =1  sbit  IADC   = 0xC0;
 146      =1  /* ADCON0 */
 147      =1  sbit  BD     = 0xDF;
 148      =1  sbit  CLK    = 0xDE;
 149      =1  sbit  ADEX   = 0xDD;
 150      =1  sbit  BSY    = 0xDC;
 151      =1  sbit  ADM    = 0xDB;
 152      =1  sbit  MX2    = 0xDA;
 153      =1  sbit  MX1    = 0xD9;
 154      =1  sbit  MX0    = 0xD8;
 155      =1  /* PSW */
 156      =1  sbit  CY     = 0xD7;
 157      =1  sbit  AC     = 0xD6;
 158      =1  sbit  F0     = 0xD5;
 159      =1  sbit  RS1    = 0xD4;
 160      =1  sbit  RS0    = 0xD3;
 161      =1  sbit  OV     = 0xD2;
 162      =1  sbit  F1     = 0xD1;
 163      =1  sbit  P      = 0xD0;
 164      =1  /*  P4    */
 165      =1  sbit  RXDC   = 0xEF;
 166      =1  sbit  TXDC   = 0xEE;
 167      =1  sbit  INT8   = 0xED;
 168      =1  sbit  SLS    = 0xEC;
 169      =1  sbit  STO    = 0xEB;
 170      =1  sbit  SRI    = 0xEA;
 171      =1  sbit  SCLK   = 0xE9;
 172      =1  sbit  ADST   = 0xE8;
 173      =1  
 174      =1  
   2          #include "canreg.h"
   1      =1  #define NODE_ID 0x02
   2      =1  
   3      =1  // error
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 4   

   4      =1  #define BUSOFF 0xFF
   5      =1  #define STUFF_ERROR 0xF0
   6      =1  #define FORM_ERROR 0xF1
   7      =1  #define ACK_ERROR 0xF2
   8      =1  #define CRC_ERROR 0xF3
   9      =1  
  10      =1  
  11      =1  extern unsigned char pdata canreg[256];
  12      =1  
  13      =1  /****************************/
  14      =1  /* CAN Register Declaration */
  15      =1  /* CAN Control Registers    */   
  16      =1  
  17      =1  #define 	CR	 canreg[  0]
  18      =1  #define  	SR	 canreg[  1]
  19      =1  #define  	IR	 canreg[  2]
  20      =1  #define  	BTR0   	 canreg[  4]
  21      =1  #define  	BTR1   	 canreg[  5]
  22      =1  #define  	GMS0   	 canreg[  6]
  23      =1  #define  	GMS1   	 canreg[  7]
  24      =1  #define  	UGML0  	 canreg[  8]
  25      =1  #define  	UGML1  	 canreg[  9]
  26      =1  #define  	LGML0  	 canreg[ 10]
  27      =1  #define  	LGML1  	 canreg[ 11]
  28      =1  #define  	UMLM0  	 canreg[ 12]
  29      =1  #define  	UMLM1  	 canreg[ 13]
  30      =1  #define  	LMLM0  	 canreg[ 14]
  31      =1  #define  	LMLM1  	 canreg[ 15]
  32      =1  
  33      =1  /* CAN Message 1 Registers */ 
  34      =1  #define  	MCR0_M1	 canreg[ 16]
  35      =1  #define  	MCR1_M1	 canreg[ 17]
  36      =1  #define  	UAR0_M1	 canreg[ 18]
  37      =1  #define  	UAR1_M1	 canreg[ 19]
  38      =1  #define  	LAR0_M1	 canreg[ 20]
  39      =1  #define  	LAR1_M1	 canreg[ 21]
  40      =1  #define  	MCFG_M1	 canreg[ 22]
  41      =1  #define  	DB0_M1 	 canreg[ 23]
  42      =1  #define  	DB1_M1 	 canreg[ 24]
  43      =1  #define  	DB2_M1 	 canreg[ 25]
  44      =1  #define  	DB3_M1 	 canreg[ 26]
  45      =1  #define  	DB4_M1 	 canreg[ 27]
  46      =1  #define  	DB5_M1 	 canreg[ 28]
  47      =1  #define  	DB6_M1 	 canreg[ 29]
  48      =1  #define  	DB7_M1 	 canreg[ 30]
  49      =1  
  50      =1  /* CAN Message 2 Registers */ 
  51      =1  #define  	MCR0_M2	 canreg[ 32]
  52      =1  #define  	MCR1_M2	 canreg[ 33]
  53      =1  #define  	UAR0_M2	 canreg[ 34]
  54      =1  #define  	UAR1_M2	 canreg[ 35]
  55      =1  #define  	LAR0_M2	 canreg[ 36]
  56      =1  #define  	LAR1_M2	 canreg[ 37]
  57      =1  #define  	MCFG_M2	 canreg[ 38]
  58      =1  #define  	DB0_M2 	 canreg[ 39]
  59      =1  #define  	DB1_M2 	 canreg[ 40]
  60      =1  #define  	DB2_M2 	 canreg[ 41]
  61      =1  #define  	DB3_M2 	 canreg[ 42]
  62      =1  #define  	DB4_M2 	 canreg[ 43]
  63      =1  #define  	DB5_M2 	 canreg[ 44]
  64      =1  #define  	DB6_M2 	 canreg[ 45]
  65      =1  #define  	DB7_M2 	 canreg[ 46]
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 5   

  66      =1  
  67      =1  /* CAN Message 3 Registers */ 
  68      =1  #define  	MCR0_M3	 canreg[ 48]
  69      =1  #define  	MCR1_M3	 canreg[ 49]
  70      =1  #define  	UAR0_M3	 canreg[ 50]
  71      =1  #define  	UAR1_M3	 canreg[ 51]
  72      =1  #define  	LAR0_M3  canreg[ 52]
  73      =1  #define  	LAR1_M3	 canreg[ 53]
  74      =1  #define  	MCFG_M3	 canreg[ 54]
  75      =1  #define  	DB0_M3	 canreg[ 55]
  76      =1  #define  	DB1_M3	 canreg[ 56]
  77      =1  #define  	DB2_M3	 canreg[ 57]
  78      =1  #define  	DB3_M3	 canreg[ 58]
  79      =1  #define  	DB4_M3	 canreg[ 59]
  80      =1  #define  	DB5_M3	 canreg[ 60]
  81      =1  #define  	DB6_M3	 canreg[ 61]
  82      =1  #define  	DB7_M3	 canreg[ 62]
  83      =1  
  84      =1  /* CAN Message 4 Registers */ 
  85      =1  #define  	MCR0_M4	 canreg[ 64]
  86      =1  #define  	MCR1_M4	 canreg[ 65]
  87      =1  #define  	UAR0_M4	 canreg[ 66]
  88      =1  #define  	UAR1_M4	 canreg[ 67]
  89      =1  #define  	LAR0_M4	 canreg[ 68]
  90      =1  #define  	LAR1_M4	 canreg[ 69]
  91      =1  #define  	MCFG_M4	 canreg[ 70]
  92      =1  #define  	DB0_M4	 canreg[ 71]
  93      =1  #define  	DB1_M4	 canreg[ 72]
  94      =1  #define  	DB2_M4	 canreg[ 73]
  95      =1  #define  	DB3_M4	 canreg[ 74]
  96      =1  #define  	DB4_M4	 canreg[ 75]
  97      =1  #define  	DB5_M4	 canreg[ 76]
  98      =1  #define  	DB6_M4	 canreg[ 77]
  99      =1  #define  	DB7_M4	 canreg[ 78]
 100      =1  
 101      =1  /* CAN Message 5 Registers */ 
 102      =1  #define  	MCR0_M5	 canreg[ 80]
 103      =1  #define  	MCR1_M5	 canreg[ 81]
 104      =1  #define  	UAR0_M5	 canreg[ 82]
 105      =1  #define  	UAR1_M5	 canreg[ 83]
 106      =1  #define  	LAR0_M5	 canreg[ 84]
 107      =1  #define  	LAR1_M5	 canreg[ 85]
 108      =1  #define  	MCFG_M5	 canreg[ 86]
 109      =1  #define  	DB0_M5	 canreg[ 87]
 110      =1  #define  	DB1_M5	 canreg[ 88]
 111      =1  #define  	DB2_M5	 canreg[ 89]
 112      =1  #define  	DB3_M5	 canreg[ 90]
 113      =1  #define  	DB4_M5	 canreg[ 91]
 114      =1  #define  	DB5_M5	 canreg[ 92]
 115      =1  #define  	DB6_M5	 canreg[ 93]
 116      =1  #define  	DB7_M5	 canreg[ 94]
 117      =1  
 118      =1  /* CAN Message 6 Registers */ 
 119      =1  #define  	MCR0_M6	 canreg[ 96]
 120      =1  #define  	MCR1_M6	 canreg[ 97]
 121      =1  #define  	UAR0_M6	 canreg[ 98]
 122      =1  #define  	UAR1_M6	 canreg[ 99]
 123      =1  #define  	LAR0_M6	 canreg[100]
 124      =1  #define  	LAR1_M6	 canreg[101]
 125      =1  #define  	MCFG_M6	 canreg[102]
 126      =1  #define  	DB0_M6	 canreg[103]
 127      =1  #define  	DB1_M6	 canreg[104]
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 6   

 128      =1  #define  	DB2_M6	 canreg[105]
 129      =1  #define  	DB3_M6	 canreg[106]
 130      =1  #define  	DB4_M6	 canreg[107]
 131      =1  #define  	DB5_M6	 canreg[108]
 132      =1  #define  	DB6_M6	 canreg[109]
 133      =1  #define  	DB7_M6	 canreg[110]
 134      =1  
 135      =1  /* CAN Message 7 Registers */ 
 136      =1  #define  	MCR0_M7	 canreg[112]
 137      =1  #define  	MCR1_M7	 canreg[113]
 138      =1  #define  	UAR0_M7	 canreg[114]
 139      =1  #define  	UAR1_M7	 canreg[115]
 140      =1  #define  	LAR0_M7	 canreg[116]
 141      =1  #define  	LAR1_M7	 canreg[117]
 142      =1  #define  	MCFG_M7	 canreg[118]
 143      =1  #define  	DB0_M7	 canreg[119]
 144      =1  #define  	DB1_M7	 canreg[120]
 145      =1  #define  	DB2_M7	 canreg[121]
 146      =1  #define  	DB3_M7	 canreg[122]
 147      =1  #define  	DB4_M7	 canreg[123]
 148      =1  #define  	DB5_M7	 canreg[124]
 149      =1  #define  	DB6_M7	 canreg[125]
 150      =1  #define  	DB7_M7	 canreg[126]
 151      =1  
 152      =1  /* CAN Message 8 Registers */ 
 153      =1  #define  	MCR0_M8	 canreg[128]
 154      =1  #define  	MCR1_M8	 canreg[129]
 155      =1  #define  	UAR0_M8	 canreg[130]
 156      =1  #define  	UAR1_M8	 canreg[131]
 157      =1  #define  	LAR0_M8	 canreg[132]
 158      =1  #define  	LAR1_M8	 canreg[133]
 159      =1  #define  	MCFG_M8	 canreg[134]
 160      =1  #define  	DB0_M8	 canreg[135]
 161      =1  #define  	DB1_M8	 canreg[136]
 162      =1  #define  	DB2_M8	 canreg[137]
 163      =1  #define  	DB3_M8	 canreg[138]
 164      =1  #define  	DB4_M8	 canreg[139]
 165      =1  #define  	DB5_M8	 canreg[130]
 166      =1  #define  	DB6_M8	 canreg[131]
 167      =1  #define  	DB7_M8	 canreg[132]
 168      =1  
 169      =1  /* CAN Message 9 Registers */ 
 170      =1  #define  	MCR0_M9	 canreg[144]
 171      =1  #define  	MCR1_M9	 canreg[145]
 172      =1  #define  	UAR0_M9	 canreg[146]
 173      =1  #define  	UAR1_M9	 canreg[147]
 174      =1  #define  	LAR0_M9	 canreg[148]
 175      =1  #define  	LAR1_M9	 canreg[149]
 176      =1  #define  	MCFG_M9	 canreg[150]
 177      =1  #define  	DB0_M9	 canreg[151]
 178      =1  #define  	DB1_M9	 canreg[152]
 179      =1  #define  	DB2_M9	 canreg[153]
 180      =1  #define  	DB3_M9	 canreg[154]
 181      =1  #define  	DB4_M9	 canreg[155]
 182      =1  #define  	DB5_M9	 canreg[156]
 183      =1  #define  	DB6_M9	 canreg[157]
 184      =1  #define  	DB7_M9	 canreg[158]
 185      =1  
 186      =1  /* CAN Message 10 Registers */ 
 187      =1  #define     MCR0_M10  canreg[160]
 188      =1  #define     MCR1_M10  canreg[161]
 189      =1  #define     UAR0_M10  canreg[162]
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 7   

 190      =1  #define     UAR1_M10  canreg[163]
 191      =1  #define     LAR0_M10  canreg[164]
 192      =1  #define     LAR1_M10  canreg[165]
 193      =1  #define     MCFG_M10  canreg[166]
 194      =1  #define     DB0_M10   canreg[167]
 195      =1  #define     DB1_M10   canreg[168]
 196      =1  #define     DB2_M10   canreg[169]
 197      =1  #define     DB3_M10   canreg[170]
 198      =1  #define     DB4_M10   canreg[171]
 199      =1  #define     DB5_M10   canreg[172]
 200      =1  #define     DB6_M10   canreg[173]
 201      =1  #define     DB7_M10   canreg[174]
 202      =1  
 203      =1  /* CAN Message 11 Registers */ 
 204      =1  #define     MCR0_M11  canreg[176]
 205      =1  #define     MCR1_M11  canreg[177]
 206      =1  #define     UAR0_M11  canreg[178]
 207      =1  #define     UAR1_M11  canreg[179]
 208      =1  #define     LAR0_M11  canreg[180]
 209      =1  #define     LAR1_M11  canreg[181]
 210      =1  #define     MCFG_M11  canreg[182]
 211      =1  #define     DB0_M11   canreg[183]
 212      =1  #define     DB1_M11   canreg[184]
 213      =1  #define     DB2_M11   canreg[185]
 214      =1  #define     DB3_M11   canreg[186]
 215      =1  #define     DB4_M11   canreg[187]
 216      =1  #define     DB5_M11   canreg[188]
 217      =1  #define     DB6_M11   canreg[189]
 218      =1  #define     DB7_M11   canreg[190]
 219      =1  
 220      =1  /* CAN Message 12 Registers */ 
 221      =1  #define     MCR0_M12  canreg[192]
 222      =1  #define     MCR1_M12  canreg[193]
 223      =1  #define     UAR0_M12  canreg[194]
 224      =1  #define     UAR1_M12  canreg[195]
 225      =1  #define     LAR0_M12  canreg[196]
 226      =1  #define     LAR1_M12  canreg[197]
 227      =1  #define     MCFG_M12  canreg[198]
 228      =1  #define     DB0_M12   canreg[199]
 229      =1  #define     DB1_M12   canreg[200]
 230      =1  #define     DB2_M12   canreg[201]
 231      =1  #define     DB3_M12   canreg[202]
 232      =1  #define     DB4_M12   canreg[203]
 233      =1  #define     DB5_M12   canreg[204]
 234      =1  #define     DB6_M12   canreg[205]
 235      =1  #define     DB7_M12   canreg[206]
 236      =1  
 237      =1  /* CAN Message 13 Registers */ 
 238      =1  #define     MCR0_M13  canreg[208]
 239      =1  #define     MCR1_M13  canreg[209]
 240      =1  #define     UAR0_M13  canreg[210]
 241      =1  #define     UAR1_M13  canreg[211]
 242      =1  #define     LAR0_M13  canreg[212]
 243      =1  #define     LAR1_M13  canreg[213]
 244      =1  #define     MCFG_M13  canreg[214]
 245      =1  #define     DB0_M13   canreg[215]
 246      =1  #define     DB1_M13   canreg[216]
 247      =1  #define     DB2_M13   canreg[217]
 248      =1  #define     DB3_M13   canreg[218]
 249      =1  #define     DB4_M13   canreg[219]
 250      =1  #define     DB5_M13   canreg[220]
 251      =1  #define     DB6_M13   canreg[221]
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 8   

 252      =1  #define     DB7_M13   canreg[222]
 253      =1  
 254      =1  /* CAN Message 14 Registers */ 
 255      =1  #define     MCR0_M14  canreg[224]
 256      =1  #define     MCR1_M14  canreg[225]
 257      =1  #define     UAR0_M14  canreg[226]
 258      =1  #define     UAR1_M14  canreg[227]
 259      =1  #define     LAR0_M14  canreg[228]
 260      =1  #define     LAR1_M14  canreg[229]
 261      =1  #define     MCFG_M14  canreg[230]
 262      =1  #define     DB0_M14   canreg[231]
 263      =1  #define     DB1_M14   canreg[232]
 264      =1  #define     DB2_M14   canreg[233]
 265      =1  #define     DB3_M14   canreg[234]
 266      =1  #define     DB4_M14   canreg[235]
 267      =1  #define     DB5_M14   canreg[236]
 268      =1  #define     DB6_M14   canreg[237]
 269      =1  #define     DB7_M14   canreg[238]
 270      =1  
 271      =1  /* CAN Message 15 Registers */ 
 272      =1  #define     MCR0_M15  canreg[240]
 273      =1  #define     MCR1_M15  canreg[241]
 274      =1  #define     UAR0_M15  canreg[242]
 275      =1  #define     UAR1_M15  canreg[243]
 276      =1  #define     LAR0_M15  canreg[244] 
 277      =1  #define     LAR1_M15  canreg[245]
 278      =1  #define     MCFG_M15  canreg[246]
 279      =1  #define     DB0_M15   canreg[247]
 280      =1  #define     DB1_M15   canreg[248]
 281      =1  #define     DB2_M15   canreg[249]
 282      =1  #define     DB3_M15   canreg[250]
 283      =1  #define     DB4_M15   canreg[251]
 284      =1  #define     DB5_M15   canreg[252]
 285      =1  #define     DB6_M15   canreg[253]
 286      =1  #define     DB7_M15   canreg[254]
 287      =1  
   3          #include "can.h"
   1      =1  #include "uart.h"
   1      =2  /* 1st byte : functional group */
   2      =2  #define REGISTER_DISPLAY 0x00
   3      =2  #define REGISTER_SET 0x01
   4      =2  #define CANMSG_TRANSMIT 0x02
   5      =2  #define CANMSG_DATASET  0x03
   6      =2  #define CAN_RESET      0x04
   7      =2  
   8      =2  #define CAN_REQUEST 0x10
   9      =2  #define CAN_RESPONSE 0x20
  10      =2  
  11      =2  #define NODE_START 0xFF
  12      =2  
  13      =2  
  14      =2  /* 2nd byte : REGISTER ID     */
  15      =2  #define GENERAL_REGISTER 0x00
  16      =2  #define MSG_OBJECT1 0x01
  17      =2  #define MSG_OBJECT2 0x02
  18      =2  #define MSG_OBJECT3 0x03
  19      =2  #define MSG_OBJECT4 0x04
  20      =2  #define MSG_OBJECT5 0x05
  21      =2  #define MSG_OBJECT6 0x06
  22      =2  #define MSG_OBJECT7 0x07
  23      =2  #define MSG_OBJECT8 0x08
  24      =2  #define MSG_OBJECT9 0x09
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 9   

  25      =2  #define MSG_OBJECTA 0x0A
  26      =2  #define MSG_OBJECTB 0x0B
  27      =2  #define MSG_OBJECTC 0x0C
  28      =2  #define MSG_OBJECTD 0x0D
  29      =2  #define MSG_OBJECTE 0x0E
  30      =2  #define MSG_OBJECTF 0x0F
  31      =2  
  32      =2  /*3rd byte : show all or show single */
  33      =2  #define SHOW_ALL  0xFF
  34      =2  
  35      =2  
  36      =2  typedef struct{
  37      =2  	unsigned char flag;
  38      =2  	unsigned int len;
  39      =2  	unsigned char rdata[30];
  40      =2  } UART_MSG;
  41      =2  
  42      =2  void Init_UART();
  43      =2  unsigned char ReadChar();
  44      =2  void WriteChar(unsigned char Data);
  45      =2  void TransmitMessage(unsigned char* msg, int len);void create_error_msg(unsigned char *msg);
   2      =1  
   3      =1  // message identifier
   4      =1  #define MSG_ID_DATA_ALL 0x1000
   5      =1  #define MSG_ID_DATA_NODE1 0x1020
   6      =1  #define MSG_ID_DATA_NODE2 0x1040
   7      =1  #define MSG_ID_DATA_NODE3 0X1060
   8      =1  
   9      =1  
  10      =1  void Init_CAN();
  11      =1  void canmsg_transmit(int index);
  12      =1  void Transmit_CAN_MSG(unsigned char *msg, int len);
  13      =1  void Get_Receive_Message(UART_MSG *RecvData, int index);
   4          #include "LED.h"
   1      =1  #define P4_0 ADST
   2      =1  #define P4_1 SCLK
   3      =1  #define P4_2 SRI
   4      =1  #define P4_3 STO
   5      =1  #define P4_4 SLS
   6      =1  #define P4_5 INT8
   7      =1  #define P4_6 TXDC
   8      =1  #define P4_7 RXDC
   9      =1  
  10      =1  void Init_LED();
   5          
   6          unsigned char pdata canreg[256] _at_ 0xF700;
   7          unsigned char error_count = 0;
   8          unsigned char retry = 0;
   9          unsigned char start = 0;
  10          
  11          void Init_CAN()
  12          {
  13   1      	int i, index;
  14   1      
  15   1      	EAL = 0;
  16   1      
  17   1      	P4 |= 0x40;			// output port
  18   1      	SYSCON &= 0xFC;                // XMAP0=0, XMAP1=0
  19   1      	XPAGE = 0xF7;			// 8 bit addressing of CAN
  20   1      
  21   1      	CR = 0x41;			// set init and CCE (enable access baudrate)
  22   1      //	BTR0 = 0x40;  BTR1 = 0x43;		// baud rate = 1 MHz
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 10  

  23   1      //	BTR0 = 0x40;  BTR1 = 0x4D;		// baud rate = 500 kHz
  24   1      //	BTR0 = 0x41;  BTR1 = 0x4D;		// baud rate = 250 kHz
  25   1      	BTR0 = 0x43;  BTR1 = 0x4D;		// baud rate = 125 kHz
  26   1      	CR = 0x01;			// reset CCE (disable access baudrate)
  27   1      
  28   1      	GMS0 = 0x0F;      GMS1 = 0xFF;	// global mask short
  29   1      	UGML0 = 0x1F;  UGML1 = 0x1F; 	// global mask long
  30   1      	LGML0 = 0x1F;  LGML1 = 0x1F;		
  31   1      	UMLM0 = 0x1F;  UMLM1 = 0x1F;  	// global mask short
  32   1      	LMLM0 = 0x1F;  LMLM1 = 0x1F;		
  33   1      
  34   1      	SR = 0xE7;			// clear TXOK and RXOK
  35   1      
  36   1      	for(i=1; i<15; i++){
  37   2      		index = 16 * i;
  38   2      		canreg[index] = 0xA9;
  39   2      		canreg[index + 1] = 0x55;
  40   2      
  41   2      		// message object 1 ~ 3 : transmit buffer
  42   2      		if(i <= 3)
  43   2      			canreg[index + 6] = 0x08;
  44   2      		else if(i == 14){
  45   3      			canreg[index + 2] = 0x00;
  46   3      			canreg[index + 3] = 0x00;
  47   3      			canreg[index + 6] = 0x00;
  48   3      		}
  49   2      		else{
  50   3      			canreg[index + 2] = 0x00;
  51   3      			canreg[index + 3] = 0x40;
  52   3      			canreg[index + 6] = 0x00;
  53   3      		}
  54   2      	}
  55   1      
  56   1      	IEN2 = 0x02;		// enable CAN interrupt
  57   1      
  58   1      	CR = 0x06;		// reset INIT, CAN interrupt generation
  59   1      
  60   1      	EAL = 1;
  61   1      }
  62          
  63          void canmsg_transmit(int index)
  64          {
  65   1      	if(SR & 0x18)
  66   1      		SR = 0;
  67   1      
  68   1      	canreg[index] = 0xA9;     //MCR low
  69   1      	canreg[index+1] = 0xE7;   //MCR high
  70   1      }
  71          
  72          void Transmit_CAN_MSG(unsigned char *msg, int len){
  73   1      	int i, index = 16, data_len;
  74   1      	unsigned short msg_id;
  75   1      
  76   1      	data_len = len - 2;
  77   1      
  78   1      	switch(msg[1]){
  79   2      	case 0x01 : 
  80   2      		msg_id = MSG_ID_DATA_NODE1;
  81   2      		break;
  82   2      	case 0x02 : 
  83   2      		msg_id = MSG_ID_DATA_NODE2;
  84   2      		break;
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 11  

  85   2      	case 0x03 : 
  86   2      		msg_id = MSG_ID_DATA_NODE3;
  87   2      		break;
  88   2      	default :
  89   2      		msg_id = MSG_ID_DATA_ALL;
  90   2      		break;
  91   2      	}
  92   1      
  93   1      	// select transmit buffer
  94   1      	for(i=1; i<=3; i++){
  95   2      		index = 16 * i;
  96   2      		if((canreg[index + 1] & 0x02) != 0x02){
  97   3      				break;
  98   3      		}
  99   2      	}
 100   1      
 101   1      	canreg[index + 1] = 0xDB;		// CPUUPD=1 
 102   1      	
 103   1      	// identifier
 104   1      	canreg[index + 2] = (unsigned char)(msg_id >> 8);
 105   1      	canreg[index + 3] = (unsigned char)msg_id;
 106   1      	
 107   1      	canreg[index + 6] = (unsigned char)(data_len << 4) + 0x08;//0x88;		// data length code = 8, transmit obje
             -ct, standard
 108   1      
 109   1      	for(i=0; i<len && i<8; i++){
 110   2      		canreg[index + 7 + i] = msg[i+2];
 111   2      	}
 112   1      
 113   1      	canreg[index] = 0xA9;		// MSGVAL=1, TXIE=1, RXIE=1, INTPND=0
 114   1      	canreg[index + 1] = 0x56;		// RMTPND=0, TXRQ=0, CPUUPD=0, NEWDAT=1
 115   1      
 116   1      	canmsg_transmit(index);		//CAN message send
 117   1      }
 118          
 119          void Get_Receive_Message(UART_MSG *RecvData, int index){
 120   1      	int i, len = 0;
 121   1      
 122   1      	len = canreg[index + 6];
 123   1      	len >>= 4;
 124   1      
 125   1      	for(i=0; i<len && i<8; i++){
 126   2      		RecvData->rdata[i] = canreg[index + 7 + i];
 127   2      	}
 128   1      
 129   1      	canreg[index + 1] = 0x55;
 130   1      
 131   1      	RecvData->flag = 1;
 132   1      	RecvData->len = len;
 133   1      }
 134          
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 12  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Init_CAN (BEGIN)
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 12
                                           ; SOURCE LINE # 15
0000 C2AF              CLR     EAL
                                           ; SOURCE LINE # 17
0002 43E840            ORL     P4,#040H
                                           ; SOURCE LINE # 18
0005 53B1FC            ANL     SYSCON,#0FCH
                                           ; SOURCE LINE # 19
0008 7591F7            MOV     XPAGE,#0F7H
                                           ; SOURCE LINE # 21
000B 7800              MOV     R0,#LOW canreg
000D 7441              MOV     A,#041H
000F F2                MOVX    @R0,A
                                           ; SOURCE LINE # 25
0010 7804              MOV     R0,#LOW canreg+04H
0012 7443              MOV     A,#043H
0014 F2                MOVX    @R0,A
0015 08                INC     R0
0016 744D              MOV     A,#04DH
0018 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 26
0019 7800              MOV     R0,#LOW canreg
001B 7401              MOV     A,#01H
001D F2                MOVX    @R0,A
                                           ; SOURCE LINE # 28
001E 7806              MOV     R0,#LOW canreg+06H
0020 740F              MOV     A,#0FH
0022 F2                MOVX    @R0,A
0023 08                INC     R0
0024 74FF              MOV     A,#0FFH
0026 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 29
0027 08                INC     R0
0028 741F              MOV     A,#01FH
002A F2                MOVX    @R0,A
002B 08                INC     R0
002C F2                MOVX    @R0,A
                                           ; SOURCE LINE # 30
002D 08                INC     R0
002E F2                MOVX    @R0,A
002F 08                INC     R0
0030 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 31
0031 08                INC     R0
0032 F2                MOVX    @R0,A
0033 08                INC     R0
0034 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 32
0035 08                INC     R0
0036 F2                MOVX    @R0,A
0037 08                INC     R0
0038 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 34
0039 7801              MOV     R0,#LOW canreg+01H
003B 74E7              MOV     A,#0E7H
003D F2                MOVX    @R0,A
                                           ; SOURCE LINE # 36
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 13  

;---- Variable 'i' assigned to Register 'R4/R5' ----
003E 7D01              MOV     R5,#01H
0040 7C00              MOV     R4,#00H
0042         ?C0001:
                                           ; SOURCE LINE # 37
0042 ED                MOV     A,R5
0043 C4                SWAP    A
0044 F8                MOV     R0,A
0045 540F              ANL     A,#0FH
0047 C8                XCH     A,R0
0048 68                XRL     A,R0
0049 FF                MOV     R7,A
004A EC                MOV     A,R4
004B C4                SWAP    A
004C 54F0              ANL     A,#0F0H
004E 48                ORL     A,R0
004F FE                MOV     R6,A
;---- Variable 'index' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 38
0050 7400              MOV     A,#LOW canreg
0052 2F                ADD     A,R7
0053 F8                MOV     R0,A
0054 74A9              MOV     A,#0A9H
0056 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 39
0057 AB07              MOV     R3,AR7
0059 7401              MOV     A,#LOW canreg+01H
005B 2B                ADD     A,R3
005C F8                MOV     R0,A
005D 7455              MOV     A,#055H
005F F2                MOVX    @R0,A
                                           ; SOURCE LINE # 42
0060 D3                SETB    C
0061 ED                MOV     A,R5
0062 9403              SUBB    A,#03H
0064 EC                MOV     A,R4
0065 6480              XRL     A,#080H
0067 9480              SUBB    A,#080H
0069 5009              JNC     ?C0004
                                           ; SOURCE LINE # 43
006B 7406              MOV     A,#LOW canreg+06H
006D 2B                ADD     A,R3
006E F8                MOV     R0,A
006F 7408              MOV     A,#08H
0071 F2                MOVX    @R0,A
0072 802D              SJMP    ?C0003
0074         ?C0004:
                                           ; SOURCE LINE # 44
0074 ED                MOV     A,R5
0075 640E              XRL     A,#0EH
0077 4C                ORL     A,R4
0078 7014              JNZ     ?C0006
                                           ; SOURCE LINE # 45
007A 7402              MOV     A,#LOW canreg+02H
007C 2F                ADD     A,R7
007D F8                MOV     R0,A
007E E4                CLR     A
007F F2                MOVX    @R0,A
                                           ; SOURCE LINE # 46
0080 7403              MOV     A,#LOW canreg+03H
0082 2F                ADD     A,R7
0083 F8                MOV     R0,A
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 14  

0084 E4                CLR     A
0085 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 47
0086 7406              MOV     A,#LOW canreg+06H
0088 2F                ADD     A,R7
0089 F8                MOV     R0,A
008A E4                CLR     A
008B F2                MOVX    @R0,A
                                           ; SOURCE LINE # 48
008C 8013              SJMP    ?C0003
008E         ?C0006:
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
008E 7402              MOV     A,#LOW canreg+02H
0090 2F                ADD     A,R7
0091 F8                MOV     R0,A
0092 E4                CLR     A
0093 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 51
0094 7403              MOV     A,#LOW canreg+03H
0096 2F                ADD     A,R7
0097 F8                MOV     R0,A
0098 7440              MOV     A,#040H
009A F2                MOVX    @R0,A
                                           ; SOURCE LINE # 52
009B 7406              MOV     A,#LOW canreg+06H
009D 2F                ADD     A,R7
009E F8                MOV     R0,A
009F E4                CLR     A
00A0 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
00A1         ?C0003:
00A1 0D                INC     R5
00A2 BD0001            CJNE    R5,#00H,?C0028
00A5 0C                INC     R4
00A6         ?C0028:
00A6 ED                MOV     A,R5
00A7 640F              XRL     A,#0FH
00A9 4C                ORL     A,R4
00AA 7096              JNZ     ?C0001
00AC         ?C0002:
                                           ; SOURCE LINE # 56
00AC 759A02            MOV     IEN2,#02H
                                           ; SOURCE LINE # 58
00AF 7800              MOV     R0,#LOW canreg
00B1 7406              MOV     A,#06H
00B3 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 60
00B4 D2AF              SETB    EAL
                                           ; SOURCE LINE # 61
00B6 22                RET     
             ; FUNCTION Init_CAN (END)

             ; FUNCTION _canmsg_transmit (BEGIN)
                                           ; SOURCE LINE # 63
;---- Variable 'index' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0000 7801              MOV     R0,#LOW canreg+01H
0002 E2                MOVX    A,@R0
0003 5418              ANL     A,#018H
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 15  

0005 6002              JZ      ?C0009
                                           ; SOURCE LINE # 66
0007 E4                CLR     A
0008 F2                MOVX    @R0,A
0009         ?C0009:
                                           ; SOURCE LINE # 68
0009 7400              MOV     A,#LOW canreg
000B 2F                ADD     A,R7
000C F8                MOV     R0,A
000D 74A9              MOV     A,#0A9H
000F F2                MOVX    @R0,A
                                           ; SOURCE LINE # 69
0010 7401              MOV     A,#LOW canreg+01H
0012 2F                ADD     A,R7
0013 F8                MOV     R0,A
0014 74E7              MOV     A,#0E7H
0016 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 70
0017 22                RET     
             ; FUNCTION _canmsg_transmit (END)

             ; FUNCTION _Transmit_CAN_MSG (BEGIN)
                                           ; SOURCE LINE # 72
0000 900000      R     MOV     DPTR,#msg
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C EC                MOV     A,R4
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F ED                MOV     A,R5
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
0011 900000      R     MOV     DPTR,#index
0014 E4                CLR     A
0015 F0                MOVX    @DPTR,A
0016 A3                INC     DPTR
0017 7410              MOV     A,#010H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
001A ED                MOV     A,R5
001B 24FE              ADD     A,#0FEH
001D FF                MOV     R7,A
001E EC                MOV     A,R4
001F 34FF              ADDC    A,#0FFH
;---- Variable 'data_len' assigned to Register 'R4/R5' ----
0021 AD07              MOV     R5,AR7
0023 FC                MOV     R4,A
                                           ; SOURCE LINE # 78
0024 900000      R     MOV     DPTR,#msg
0027 E0                MOVX    A,@DPTR
0028 FB                MOV     R3,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FA                MOV     R2,A
002C A3                INC     DPTR
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 16  

002D E0                MOVX    A,@DPTR
002E F9                MOV     R1,A
002F 900001            MOV     DPTR,#01H
0032 120000      E     LCALL   ?C?CLDOPTR
0035 24FE              ADD     A,#0FEH
0037 6013              JZ      ?C0013
0039 14                DEC     A
003A 601C              JZ      ?C0014
003C 2402              ADD     A,#02H
003E 7024              JNZ     ?C0015
                                           ; SOURCE LINE # 79
0040         ?C0012:
                                           ; SOURCE LINE # 80
0040 900000      R     MOV     DPTR,#msg_id
0043 7410              MOV     A,#010H
0045 F0                MOVX    @DPTR,A
0046 A3                INC     DPTR
0047 7420              MOV     A,#020H
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
004A 8021              SJMP    ?C0011
                                           ; SOURCE LINE # 82
004C         ?C0013:
                                           ; SOURCE LINE # 83
004C 900000      R     MOV     DPTR,#msg_id
004F 7410              MOV     A,#010H
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 7440              MOV     A,#040H
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 84
0056 8015              SJMP    ?C0011
                                           ; SOURCE LINE # 85
0058         ?C0014:
                                           ; SOURCE LINE # 86
0058 900000      R     MOV     DPTR,#msg_id
005B 7410              MOV     A,#010H
005D F0                MOVX    @DPTR,A
005E A3                INC     DPTR
005F 7460              MOV     A,#060H
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 87
0062 8009              SJMP    ?C0011
                                           ; SOURCE LINE # 88
0064         ?C0015:
                                           ; SOURCE LINE # 89
0064 900000      R     MOV     DPTR,#msg_id
0067 7410              MOV     A,#010H
0069 F0                MOVX    @DPTR,A
006A A3                INC     DPTR
006B E4                CLR     A
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
006D         ?C0011:
                                           ; SOURCE LINE # 94
006D 900000      R     MOV     DPTR,#i
0070 E4                CLR     A
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 04                INC     A
0074 F0                MOVX    @DPTR,A
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 17  

0075         ?C0016:
0075 900000      R     MOV     DPTR,#i
0078 E0                MOVX    A,@DPTR
0079 FE                MOV     R6,A
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D D3                SETB    C
007E 9403              SUBB    A,#03H
0080 EE                MOV     A,R6
0081 6480              XRL     A,#080H
0083 9480              SUBB    A,#080H
0085 502D              JNC     ?C0017
                                           ; SOURCE LINE # 95
0087 EF                MOV     A,R7
0088 C4                SWAP    A
0089 F8                MOV     R0,A
008A 540F              ANL     A,#0FH
008C C8                XCH     A,R0
008D 68                XRL     A,R0
008E 900000      R     MOV     DPTR,#index+01H
0091 F0                MOVX    @DPTR,A
0092 EE                MOV     A,R6
0093 C4                SWAP    A
0094 54F0              ANL     A,#0F0H
0096 48                ORL     A,R0
0097 900000      R     MOV     DPTR,#index
009A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D 2401              ADD     A,#LOW canreg+01H
009F F8                MOV     R0,A
00A0 E2                MOVX    A,@R0
00A1 30E110            JNB     ACC.1,?C0017
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
00A4         ?C0018:
00A4 900000      R     MOV     DPTR,#i+01H
00A7 E0                MOVX    A,@DPTR
00A8 04                INC     A
00A9 F0                MOVX    @DPTR,A
00AA 70C9              JNZ     ?C0016
00AC 900000      R     MOV     DPTR,#i
00AF E0                MOVX    A,@DPTR
00B0 04                INC     A
00B1 F0                MOVX    @DPTR,A
00B2         ?C0029:
00B2 80C1              SJMP    ?C0016
00B4         ?C0017:
                                           ; SOURCE LINE # 101
00B4 900000      R     MOV     DPTR,#index+01H
00B7 E0                MOVX    A,@DPTR
00B8 F9                MOV     R1,A
00B9 2401              ADD     A,#LOW canreg+01H
00BB F8                MOV     R0,A
00BC 74DB              MOV     A,#0DBH
00BE F2                MOVX    @R0,A
                                           ; SOURCE LINE # 104
00BF A3                INC     DPTR
00C0 E0                MOVX    A,@DPTR
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 18  

00C1 FF                MOV     R7,A
00C2 7402              MOV     A,#LOW canreg+02H
00C4 29                ADD     A,R1
00C5 F8                MOV     R0,A
00C6 EF                MOV     A,R7
00C7 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 105
00C8 A3                INC     DPTR
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
00CB 7403              MOV     A,#LOW canreg+03H
00CD 29                ADD     A,R1
00CE F8                MOV     R0,A
00CF EF                MOV     A,R7
00D0 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 107
00D1 ED                MOV     A,R5
00D2 C4                SWAP    A
00D3 F8                MOV     R0,A
00D4 540F              ANL     A,#0FH
00D6 C8                XCH     A,R0
00D7 68                XRL     A,R0
00D8 FF                MOV     R7,A
00D9 EC                MOV     A,R4
00DA C4                SWAP    A
00DB 54F0              ANL     A,#0F0H
00DD 48                ORL     A,R0
00DE EF                MOV     A,R7
00DF 2408              ADD     A,#08H
00E1 FF                MOV     R7,A
00E2 7406              MOV     A,#LOW canreg+06H
00E4 29                ADD     A,R1
00E5 F8                MOV     R0,A
00E6 EF                MOV     A,R7
00E7 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 109
00E8 E4                CLR     A
00E9 900000      R     MOV     DPTR,#i
00EC F0                MOVX    @DPTR,A
00ED A3                INC     DPTR
00EE F0                MOVX    @DPTR,A
00EF         ?C0020:
00EF 900000      R     MOV     DPTR,#len
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 A3                INC     DPTR
00F8 E0                MOVX    A,@DPTR
00F9 FC                MOV     R4,A
00FA A3                INC     DPTR
00FB E0                MOVX    A,@DPTR
00FC FD                MOV     R5,A
00FD C3                CLR     C
00FE 9F                SUBB    A,R7
00FF EE                MOV     A,R6
0100 6480              XRL     A,#080H
0102 F8                MOV     R0,A
0103 EC                MOV     A,R4
0104 6480              XRL     A,#080H
0106 98                SUBB    A,R0
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 19  

0107 503F              JNC     ?C0021
0109 C3                CLR     C
010A ED                MOV     A,R5
010B 9408              SUBB    A,#08H
010D EC                MOV     A,R4
010E 6480              XRL     A,#080H
0110 9480              SUBB    A,#080H
0112 5034              JNC     ?C0021
                                           ; SOURCE LINE # 110
0114 900000      R     MOV     DPTR,#msg
0117 E0                MOVX    A,@DPTR
0118 FB                MOV     R3,A
0119 A3                INC     DPTR
011A E0                MOVX    A,@DPTR
011B FA                MOV     R2,A
011C A3                INC     DPTR
011D E0                MOVX    A,@DPTR
011E F9                MOV     R1,A
011F 8D82              MOV     DPL,R5
0121 8C83              MOV     DPH,R4
0123 A3                INC     DPTR
0124 A3                INC     DPTR
0125 120000      E     LCALL   ?C?CLDOPTR
0128 FF                MOV     R7,A
0129 900000      R     MOV     DPTR,#i+01H
012C E0                MOVX    A,@DPTR
012D FE                MOV     R6,A
012E 900000      R     MOV     DPTR,#index+01H
0131 E0                MOVX    A,@DPTR
0132 2E                ADD     A,R6
0133 2407              ADD     A,#LOW canreg+07H
0135 F8                MOV     R0,A
0136 EF                MOV     A,R7
0137 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 111
0138 900000      R     MOV     DPTR,#i+01H
013B E0                MOVX    A,@DPTR
013C 04                INC     A
013D F0                MOVX    @DPTR,A
013E 70AF              JNZ     ?C0020
0140 900000      R     MOV     DPTR,#i
0143 E0                MOVX    A,@DPTR
0144 04                INC     A
0145 F0                MOVX    @DPTR,A
0146         ?C0030:
0146 80A7              SJMP    ?C0020
0148         ?C0021:
                                           ; SOURCE LINE # 113
0148 900000      R     MOV     DPTR,#index+01H
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D 2400              ADD     A,#LOW canreg
014F F8                MOV     R0,A
0150 74A9              MOV     A,#0A9H
0152 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 114
0153 7401              MOV     A,#LOW canreg+01H
0155 2F                ADD     A,R7
0156 F8                MOV     R0,A
0157 7456              MOV     A,#056H
0159 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 116
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 20  

015A 900000      R     MOV     DPTR,#index
015D E0                MOVX    A,@DPTR
015E FE                MOV     R6,A
015F A3                INC     DPTR
0160 E0                MOVX    A,@DPTR
0161 FF                MOV     R7,A
0162 020000      R     LJMP    _canmsg_transmit
             ; FUNCTION _Transmit_CAN_MSG (END)

             ; FUNCTION _Get_Receive_Message (BEGIN)
                                           ; SOURCE LINE # 119
0000 900000      R     MOV     DPTR,#RecvData
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C EC                MOV     A,R4
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F ED                MOV     A,R5
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
0011 E4                CLR     A
0012 A3                INC     DPTR
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 122
0016 900000      R     MOV     DPTR,#index+01H
0019 E0                MOVX    A,@DPTR
001A 2406              ADD     A,#LOW canreg+06H
001C F8                MOV     R0,A
001D E2                MOVX    A,@R0
001E FF                MOV     R7,A
001F A3                INC     DPTR
0020 E4                CLR     A
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
0025 900000      R     MOV     DPTR,#len
0028 E0                MOVX    A,@DPTR
0029 FE                MOV     R6,A
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C 7804              MOV     R0,#04H
002E         ?C0031:
002E CE                XCH     A,R6
002F A2E7              MOV     C,ACC.7
0031 13                RRC     A
0032 CE                XCH     A,R6
0033 13                RRC     A
0034 D8F8              DJNZ    R0,?C0031
0036 F0                MOVX    @DPTR,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#len
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 21  

003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 125
;---- Variable 'i' assigned to Register 'R6/R7' ----
003C E4                CLR     A
003D FF                MOV     R7,A
003E FE                MOV     R6,A
003F         ?C0024:
003F D3                SETB    C
0040 900000      R     MOV     DPTR,#len+01H
0043 E0                MOVX    A,@DPTR
0044 9F                SUBB    A,R7
0045 EE                MOV     A,R6
0046 6480              XRL     A,#080H
0048 F8                MOV     R0,A
0049 900000      R     MOV     DPTR,#len
004C E0                MOVX    A,@DPTR
004D 6480              XRL     A,#080H
004F 98                SUBB    A,R0
0050 4035              JC      ?C0025
0052 EF                MOV     A,R7
0053 9408              SUBB    A,#08H
0055 EE                MOV     A,R6
0056 6480              XRL     A,#080H
0058 9480              SUBB    A,#080H
005A 502B              JNC     ?C0025
                                           ; SOURCE LINE # 126
005C 900000      R     MOV     DPTR,#index+01H
005F E0                MOVX    A,@DPTR
0060 2F                ADD     A,R7
0061 2407              ADD     A,#LOW canreg+07H
0063 F8                MOV     R0,A
0064 E2                MOVX    A,@R0
0065 FD                MOV     R5,A
0066 900000      R     MOV     DPTR,#RecvData
0069 E0                MOVX    A,@DPTR
006A FB                MOV     R3,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FA                MOV     R2,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 2403              ADD     A,#03H
0072 F9                MOV     R1,A
0073 E4                CLR     A
0074 3A                ADDC    A,R2
0075 FA                MOV     R2,A
0076 E9                MOV     A,R1
0077 2F                ADD     A,R7
0078 F9                MOV     R1,A
0079 EA                MOV     A,R2
007A 3E                ADDC    A,R6
007B FA                MOV     R2,A
007C ED                MOV     A,R5
007D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 127
0080 0F                INC     R7
0081 BF0001            CJNE    R7,#00H,?C0032
0084 0E                INC     R6
0085         ?C0032:
0085 80B8              SJMP    ?C0024
0087         ?C0025:
                                           ; SOURCE LINE # 129
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 22  

0087 900000      R     MOV     DPTR,#index+01H
008A E0                MOVX    A,@DPTR
008B 2401              ADD     A,#LOW canreg+01H
008D F8                MOV     R0,A
008E 7455              MOV     A,#055H
0090 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 131
0091 900000      R     MOV     DPTR,#RecvData
0094 E0                MOVX    A,@DPTR
0095 FB                MOV     R3,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 FA                MOV     R2,A
0099 A3                INC     DPTR
009A E0                MOVX    A,@DPTR
009B F9                MOV     R1,A
009C 7401              MOV     A,#01H
009E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 132
00A1 900000      R     MOV     DPTR,#len
00A4 E0                MOVX    A,@DPTR
00A5 FE                MOV     R6,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 900000      R     MOV     DPTR,#RecvData
00AC E0                MOVX    A,@DPTR
00AD FB                MOV     R3,A
00AE A3                INC     DPTR
00AF E0                MOVX    A,@DPTR
00B0 FA                MOV     R2,A
00B1 A3                INC     DPTR
00B2 E0                MOVX    A,@DPTR
00B3 F9                MOV     R1,A
00B4 900001            MOV     DPTR,#01H
00B7 EE                MOV     A,R6
00B8 8FF0              MOV     B,R7
00BA 020000      E     LJMP    ?C?ISTOPTR
             ; FUNCTION _Get_Receive_Message (END)

C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 23  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


T2I0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T2L1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
UART_MSG . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  33
  flag . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  len. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0001H  2
  rdata. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0003H  30
BD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
T2R0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
T2R1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
EADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
IEN2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
IADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
I2FR . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
I3FR . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
T2CM . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
ECAN . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IEX2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
IEX3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
IEX4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
IEX5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
IEX6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
EX6M . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
ADEX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DDH  1
INT8 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
T2PS . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
ADST . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
SCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
ESSC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
start. . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
RXDC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
_Transmit_CAN_MSG. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  msg. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  len. . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0003H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0005H  2
  index. . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0007H  2
  data_len . . . . . . . . . . . . . .  * REG *  DATA   INT      0004H  2
  msg_id . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0009H  2
TXDC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
_canmsg_transmit . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  index. . . . . . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
retry. . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0001H  1
error_count. . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0002H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 24  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
SWDT . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
Init_CAN . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0004H  2
  index. . . . . . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
EX2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
EX3. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
EX4. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
ADM. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DBH  1
EX5. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
EAL. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
_Get_Receive_Message . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  RecvData . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  index. . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0003H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
  len. . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0005H  2
EX7. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
MX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
EX8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
MX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
MX2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
CLK. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
SYSCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BFH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
SRI. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
BSY. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DCH  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
WDT. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
SLS. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
canreg . . . . . . . . . . . . . . . .  PUBLIC   PDATA  ARRAY    F700H  256
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
STO. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
XPAGE. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1


C51 COMPILER V6.14  CAN                                                                    11/26/2005 20:58:31 PAGE 25  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    753    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
